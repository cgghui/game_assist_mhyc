package mhyc

import (
	"bytes"
	"encoding/base64"
	"encoding/binary"
	"encoding/json"
	"fmt"
	"github.com/gorilla/websocket"
	"github.com/mozillazg/go-pinyin"
	"google.golang.org/protobuf/proto"
	"io/ioutil"
	"os"
	"strings"
	"sync"
	"testing"
)

func TestDefine(t *testing.T) {
	t.Log(DefineGetMailAttachOrdinary)
	t.Log(DefineGetMailAttachActivity)
	t.Log(DefineGiftRechargeEveryDay)
	t.Log(DefineRespectL)
	t.Log(DefineRespectG)
}

func TestS(t *testing.T) {
	body, _ := proto.Marshal(&Ping{})
	buf := bytes.NewBuffer([]byte{})
	_ = binary.Write(buf, binary.BigEndian, int16(RandInt64(0, 65536)))
	_ = binary.Write(buf, binary.BigEndian, int16(22))
	buf.Write(body)
	ping := buf.Bytes()
	m := &sync.Mutex{}
	for {
		go func() {
			conn, _, err := websocket.DefaultDialer.Dial("wss://allws.huanlingxiuxian.com/300914:30042", nil)
			if err != nil {
				t.Error(err)
			}
			m.Lock()
			_ = conn.WriteMessage(websocket.BinaryMessage, ping)
			m.Unlock()
		}()
	}
	//interrupt := make(chan os.Signal, 1)
	//signal.Notify(interrupt, os.Interrupt)
	//<-interrupt
}

func TestDeBinaryCode(t *testing.T) {
	code, err := base64.StdEncoding.DecodeString("CPkAmgj7ExANGBggJihJ") //EWFnIQiluQI=
	if err != nil {
		t.Error(err)
	}
	var ma = &C2SRoutePath{}
	if err = proto.Unmarshal(code[4:], ma); err != nil {
		t.Error(err)
	}
	// type:8 id:385
	t.Log(ma) // 13936 8
}

func TestDeBinaryCode2(t *testing.T) {
	code, err := base64.StdEncoding.DecodeString("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") //EWFnIQiluQI=
	if err != nil {
		t.Error(err)
	}
	var ma = &S2CJJCList{}
	if err = proto.Unmarshal(code[4:], ma); err != nil {
		t.Error(err)
	}
	for _, role := range ma.Roles {
		for _, a := range role.A {
			if a.V == 15212 || a.V == 15798 {
				fmt.Println(a.K)
			}
		}
	}
	// type:8 id:385
	t.Log(ma) // 13936 8
}

func TestJson2PB(t *testing.T) {
	s, _ := ioutil.ReadFile("D:\\go\\game_assist_mhyc\\mhyc\\data.json")
	var ret map[string]map[string]map[string]interface{}
	err := json.Unmarshal(s, &ret)
	if err != nil {
		t.Error(err)
	}
	var rr = make([]string, 0, 0)
	for k, v := range ret {
		var ss = make([]string, 0, 0)
		for fn, vx := range v["fields"] {
			vv := vx.(map[string]interface{})
			var rule string
			if _, ok := vv["rule"]; ok {
				rule = vv["rule"].(string) + " "
			}
			ss = append(ss, fmt.Sprintf("\t%s%v %v = %v;", rule, vv["type"], fn, vv["id"]))
		}
		rr = append(rr, "message "+k+"{\n"+strings.Join(ss, "\n")+"\n}")
	}
	err = ioutil.WriteFile("D:\\go\\game_assist_mhyc\\mhyc\\sss.proto", []byte(strings.Join(rr, "\n")), 0666)
	fmt.Println(ret)
}

// 11 250
func TestMPQ(t *testing.T) {
	re, _ := LoadDataRes("D:\\go\\game_assist_mhyc\\mhyc\\cfg_3_data.txt")
	for ii, i := range re.Index {
		fmt.Println(ii, " ", i.Name)
		_ = re.GetData(&re.Index[ii])
		ioutil.WriteFile("D:\\go\\game_assist_mhyc\\mhyc\\cfg_3\\"+i.Name, re.Index[ii].Data, 0666)
	}
	fmt.Println()
}

func TestC2P(t *testing.T) {
	f1 := "C:\\Users\\admin\\Desktop\\新建文本文档 (2).txt"
	f2 := "C:\\Users\\admin\\Desktop\\新建文本文档 (3).txt"
	content, err := ioutil.ReadFile(f1)
	if err != nil {
		t.Error(err)
	}
	var w *os.File
	if w, err = os.Create(f2); err != nil {
		t.Error(err)
	}
	defer func() { _ = w.Close() }()
	arg := pinyin.NewArgs()
	content = bytes.ReplaceAll(content, []byte("\r"), []byte{})
	for _, line := range bytes.Split(content, []byte("\n")) {
		str := string(line)
		py := strings.Join(pinyin.LazyPinyin(str, arg), "")
		if py == "" {
			py = str
		}
		_, _ = w.WriteString(strings.ToLower(py) + "\n")
	}
}
